openapi: 3.0.1
info:
  title: Chatbot API
  version: v1
servers:
  - url: http://localhost:3000

paths:
  /api/v1/conversations:
    get:
      summary: List conversations
      tags:
        - Conversations
      responses:
        '200':
          description: A list of conversations
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Conversation'
    post:
      summary: Create a new conversation
      tags:
        - Conversations
      responses:
        '201':
          description: Conversation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversation:
                    $ref: '#/components/schemas/Conversation'

  /api/v1/conversations/{id}:
    get:
      summary: Show a conversation
      tags:
        - Conversations
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Conversation found
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversation:
                    $ref: '#/components/schemas/Conversation'
        '404':
          description: Not found
    delete:
      summary: Delete a conversation
      tags:
        - Conversations
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Conversation deleted

  /api/v1/messages:
    post:
      summary: Create a message in a conversation
      tags:
        - Messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
                  properties:
                    text:
                      type: string
                    sender:
                      type: string
                      enum: [USER, BOT]
                    conversation_id:
                      type: string
                  required: [text, sender, conversation_id]
      responses:
        '201':
          description: Message created
          content:
            application/json:
              schema:
                type: object
                properties:
                  userMessage:
                    $ref: '#/components/schemas/Message'
                  botReply:
                    $ref: '#/components/schemas/Message'

  /api/v1/messages/{id}:
    get:
      summary: List messages in a conversation
      tags:
        - Messages
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Messages found
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'

components:
  schemas:
    Conversation:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Message:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        sender:
          type: string
          enum: [USER, BOT]
        conversation_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
